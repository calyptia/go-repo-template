---
name: Reusable workflow to build and publish a docker image.
on:
  workflow_call:
    inputs:
      image_registry:
        description: The image registry to use.
        type: string
        required: true
        default: ghcr.io
      image_name:
        description: The image name to use.
        type: string
        required: true
        default: calyptia/cloud/main
      image_tag:
        description: The image tag to use.
        type: string
        required: true
        default: latest
      dockerfile:
        description: Dockerfile to use when building
        type: string
        required: false
        default: ./Dockerfile
      platform:
        description: Platform to build the image
        type: string
        required: false
        default: linux/amd64
    secrets:
      image_registry_username:
        description: Username (if github use github.actor) to use for authentication on private registry
        required: true
      image_registry_password:
        description: Password (if github use a PAT token) to use for authentication on private registry
        required: true
jobs:
  call-build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.image_registry }}
          username: ${{ secrets.image_registry_username }}
          password: ${{ secrets.image_registry_password }}

      - name: Extract metadata from Github
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ inputs.image_registry }}/${{ inputs.image_name }}
          tags: |
            raw,${{ inputs.image_tag }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          file: ${{ inputs.dockerfile }}
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platform }}
          push: true